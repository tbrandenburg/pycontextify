[project]
name = "pycontextify"
version = "0.1.0"
description = "Relationship-aware semantic search MCP server"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
keywords = ["mcp", "semantic-search", "embeddings", "faiss", "rag", "vector-search"]
license = {file = "LICENSE"}
authors = [
    {name = "Tom Brandenburg", email = "kabelkaspertom@googlemail.com"},
]
maintainers = [
    {name = "Tom Brandenburg", email = "kabelkaspertom@googlemail.com"},
]

dependencies = [
    "fastmcp>=1.0.0",
    "faiss-cpu>=1.7.0",
    "sentence-transformers>=2.2.0",
    "PyPDF2>=3.0.0",
    "pdfplumber>=0.9.0",
    "beautifulsoup4>=4.12.0",
    "crawl4ai>=0.7.4",
    "requests>=2.31.0",
    "psutil>=5.9.0",
    "numpy>=1.24.0",
    "python-dotenv>=1.0.0",
    "scikit-learn>=1.3.0",  # For TF-IDF keyword search
    "pymupdf>=1.23.0",      # Alternative PDF parser
    "rank-bm25>=0.2.2",     # BM25 for keyword search
]

[project.optional-dependencies]
# Future embedding providers
ollama = ["ollama>=0.1.0"]
openai = ["openai>=1.0.0"]
# Enhanced NLP capabilities
nlp = [
    "spacy>=3.7.0",
    "en-core-web-sm @ https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-3.7.1/en_core_web_sm-3.7.1-py3-none-any.whl"
]
# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "build>=1.0.3",
    "twine>=4.0.0",
]
# GPU support
gpu = ["faiss-gpu>=1.7.0"]

[project.scripts]
pycontextify = "pycontextify.mcp:main"

[project.urls]
Homepage = "https://github.com/pycontextify/pycontextify"
Documentation = "https://github.com/pycontextify/pycontextify#readme"
Repository = "https://github.com/pycontextify/pycontextify"
Issues = "https://github.com/pycontextify/pycontextify/issues"
Changelog = "https://github.com/pycontextify/pycontextify/releases"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["pycontextify"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (requires --runslow to run)",
    "integration: marks tests as integration tests",
    "system: marks tests as system tests (run against actual MCP server)",
    "embedding: marks tests as requiring embedding models",
    "unit: marks tests as fast unit tests",
    "no_mock_st: disable sentence-transformers mocking for this test"
]

[dependency-groups]
dev = [
    "pytest-asyncio>=1.2.0",
    "types-psutil>=7.0.0.20250822",
    "types-requests>=2.32.4.20250913",
]
